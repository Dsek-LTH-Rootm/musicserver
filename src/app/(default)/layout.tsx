import Link from "next/link";
import { cookies } from "next/headers";
import { HomeFilled, SearchOutlined, SettingOutlined } from "@ant-design/icons";
import { getWord } from "@/words";
import { JwtToken } from "@/types";
import { jwtDecode } from "jwt-decode";
import Image from "next/image";
import { ToastContainer } from "@/components/ToastContainer";
import Player from "@/components/Player";

export default async function DefaultLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // Gets username from either a uuid cookie generated by server or grabs it from keycloak
  const getUser = async () => {
    const jwt = cookies().get("jwt");
    const guestUUID = cookies().get("user");
    if (jwt && jwt.value) {
      // Access token is not opaque access token, which it means it contains data which we use here
      const user: JwtToken = jwtDecode(jwt.value);
      return user.preferred_username;
    } else if (guestUUID && guestUUID.value) {
      return await getWord(guestUUID.value);
    } else {
      return "Not signed in";
    }
  };

  return (
    <main>
      <ToastContainer />
      <nav>
        <div className="m-4 flex w-screen items-center font-mono *:text-sm min-[340px]:*:text-xl sm:*:text-3xl">
          <Link
            href="/"
            className="transform transition hover:scale-105 hover:text-gray-400"
          >
            <span className="flex flex-row items-center">
              <Image
                width={64}
                height={64}
                src="/sigill-adobe-garamond.jpg"
                alt="D-guild logo"
              />
              -thoven
            </span>
          </Link>
          <div className="absolute right-0 mr-4 flex">
            <span className="!text-lg mr-4">{await getUser()}</span>
            <Link
              href="/admin"
              className="transform transition hover:scale-105 hover:text-gray-400 hover:rotate-90"
            >
              <SettingOutlined
                className="flex aspect-square h-full justify-center"
                onPointerEnterCapture={undefined}
                onPointerLeaveCapture={undefined}
              />
            </Link>
          </div>
        </div>
        <div className="m-4 flex w-screen items-center font-mono *:text-sm min-[340px]:*:text-xl sm:*:text-3xl">
          <Link
            href="/"
            className="transform transition hover:scale-105 hover:text-gray-400 mr-3"
          >
            <HomeFilled
              className="flex aspect-square h-full justify-center"
              onPointerEnterCapture={undefined}
              onPointerLeaveCapture={undefined}
            />
          </Link>
          <form
            action="/results"
            className="flex flex-col items-end w-full h-full justify-center pr-8"
          >
            <div className="h-[50px] text-[1.4em] flex flex-row border sm:w-[500px] w-full border-[rgb(87, 87, 87)] border-2 border-solid rounded-[10px] box-border overflow-hidden border-gray-500 transition ease-in-out active:border-white focus-within:border-white">
              <input
                type="text"
                name="search"
                className="flex items-center text-base h-full w-full pl-[10px] pr-[10px] bg-black box-border outline-none text-white transition ease-in-out"
                placeholder="Search"
              />
              <button
                type="submit"
                className="w-auto bg-black h-full aspect-square text-2xl border border-transparent border-l-gray-400 text-white z-10 hover:bg-gray-800 focus:bg-gray-800"
              >
                <SearchOutlined
                  className="pl-[10px] pr-[10px] h-full text-base justify-center items-center flex w-auto"
                  onPointerEnterCapture={undefined}
                  onPointerLeaveCapture={undefined}
                />
              </button>
            </div>
          </form>
        </div>
      </nav>
      <div className="h-full overflow-y-scroll">{children}</div>
      <Player />
    </main>
  );
}
